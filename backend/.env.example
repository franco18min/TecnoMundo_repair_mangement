# TecnoMundo Repair Management - Backend (.env ejemplo)

#############################################
# Copia este archivo a backend/.env y AJUSTA
# los valores según tu entorno.
#
# Este archivo NO se sube al repositorio.
#############################################

# --- CORS ---
# Incluye tu frontend local y/o dominios en producción.
ALLOWED_ORIGINS=http://localhost:5173,http://localhost:5174,https://tecnoapp.ar,https://www.tecnoapp.ar

# --- Base de Datos (elige una opción) ---
#
# Opción A) Supabase - Connection Pooler (producción)
# - Host: *.pooler.supabase.com
# - Puerto: 6543
# - Usuario: postgres.<PROJECT_REF> (ej: postgres.zshbhslyzclpovyngryf)
# - Password: "Database password" del proyecto (NO es anon/service key)
# - Base de datos: postgres
# - SSL: require
DB_HOST=aws-1-sa-east-1.pooler.supabase.com
DB_PORT=6543
DB_NAME=postgres
DB_USER=postgres.YOUR_PROJECT_REF
DB_PASSWORD=YOUR_SUPABASE_DATABASE_PASSWORD
DB_SSLMODE=require
DB_DRIVER=pg8000

# Opción B) PostgreSQL local/directo (desarrollo)
# Descomenta y ajusta si usas una instancia local.
# DB_HOST=127.0.0.1
# DB_PORT=5432
# DB_NAME=tecnomundo
# DB_USER=postgres
# DB_PASSWORD=postgres
# DB_SSLMODE=prefer
# DB_DRIVER=pg8000

# (Opcional) Si prefieres una URL completa, puedes indicarla.
# DATABASE_URL="postgresql+pg8000://user:password@host:port/database"

# --- Seguridad JWT ---
# Cambia esta clave en producción (usa al menos 32 caracteres aleatorios)
SECRET_KEY=CHANGE_ME_TO_A_LONG_RANDOM_SECRET
JWT_ALGORITHM=HS256
# Tiempo de expiración del token (minutos)
ACCESS_TOKEN_EXPIRE_MINUTES=240

# --- App ---
# Puerto interno donde correrá Uvicorn/Gunicorn (CloudPanel hará reverse proxy)
APP_PORT=9001

# Notas:
# - No uses comillas alrededor de los valores, a menos que sean parte real del valor.
# - Si ves "password authentication failed" al usar Supabase:
#   1) Verifica DB_USER = postgres.<PROJECT_REF>
#   2) Verifica DB_PASSWORD = Database password (configuración del proyecto)
#   3) Verifica DB_HOST/DB_PORT (pooler: 6543, directo: 5432)
#   4) Verifica DB_SSLMODE = require
# - Para probar, inicia el backend y visita: /api/v1/init/health